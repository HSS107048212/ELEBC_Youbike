# -*- coding: utf-8 -*-
"""03_處理每天bemp資料.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KIaC6iLqk9hYBG1PeQCdmSWgR4ml-jRA
"""

# 讀取資料夾中的excel檔名
import os

# 指定你的目錄路徑
directory_path = 'C:/Users/Elebc_GPU_Server/Desktop/排程抓資料/'

# 獲取目錄中的所有檔案和子目錄名稱
files_and_directories = os.listdir(directory_path)

# 打印出列表
print(files_and_directories)

import os
import datetime

# 獲取今天的日期
today = datetime.date.today()


# 一次計算 1 天的資料，如days=1表示計算前1天日期的資料 (UI:days)
days_ago = today - datetime.timedelta(days=1) #後續更改----------------------------------------------------------------------------

# 將日期格式化為 YYYY-MM-DD
formatted_date = days_ago.strftime('%Y-%m-%d')
print(formatted_date)
# 指定你的目錄路徑

# 搜索與計算出的日期匹配的文件名
matched_files = [f for f in os.listdir(directory_path) if formatted_date in f and "AC_PV" not in f]

# 排序文件名列表，假設日期和時間格式固定，可以直接按字符串排序
matched_files = sorted(matched_files)

# 打印出匹配的文件名
print(matched_files)

import pandas as pd

def load_and_merge_youbike_data(files):
    # Initialize an empty list to store dataframes
    data_frames = []

    # Loop over each file and corresponding time label
    for file_path, time_label in files:
        # Read data from file
        data = pd.read_excel(file_path)
        #print(data)
        # Check if column 'available_return_bikes' exists and rename it if it does
        if 'available_return_bikes' in data.columns:
            data = data.rename(columns={'available_return_bikes': 'bemp'})
        # Extract required columns and rename for clarity # time_label=04-12 1730 #time_label.split()[-1]}=1730
        data_reduced = data[['sna', 'bemp']].rename(columns={'bemp': f'{time_label.split()[-1]}'}) #如果2024-03-28 merged_data.xlsx 放在同一個資料夾，會出錯，因為相同檔名，會被讀取。
        print(time_label)
        # Append the reduced dataframe to the list
        data_frames.append(data_reduced)

    # Merge all dataframes on the station name column 'sna'
    merged_data = data_frames[0]
    for data_frame in data_frames[1:]:
        merged_data = merged_data.merge(data_frame, on='sna')

    return merged_data

# Usage example:
""""
files = [
    (f"/content/{matched_files[0]}}", f"{matched_files[0][5:13]}"),
    (f"/content/{matched_files[1]}}", f"{matched_files[1][5:13]}"),
    (f"/content/{matched_files[2]}}", f"{matched_files[2][5:13]}"),
    # You can easily add more files and time labels here
]"""

files = [(f"{directory_path}{filename}", filename[5:15]) for filename in matched_files]  #simplify ##5:13，


merged_data = load_and_merge_youbike_data(files)
print(merged_data.head())

import pandas as pd

# Assuming 'merged_data' is a pandas DataFrame
merged_data.to_excel(f"{formatted_date} merged_data.xlsx", index=False)  # index=False to avoid writing row indices to the file

"""## 上傳當日bemp檔案至Google Drive"""

# !pip install google-api-python-client

from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload

# 設置Google Drive API的認證
credentials = service_account.Credentials.from_service_account_file(
    f'{directory_path}rich-operand-418201-63c868c738c8.json',  # 請替換成你的認證文件路徑
    scopes=['https://www.googleapis.com/auth/drive']
)

# 創建Google Drive API的服務
drive_service = build('drive', 'v3', credentials=credentials)

# 要上傳的Excel文件路徑
excel_file_path = f'{directory_path}{formatted_date} merged_data.xlsx'  # 請替換成你的Excel文件路徑

# 要上傳到的Google Drive文件夾的ID
folder_id = '1rMYZiTgDeAQtDLH05ny4R0OtBJoAUp85'  # 請替換成目標文件夾的ID

# 上傳文件
file_metadata = {
    'name': os.path.basename(excel_file_path),
    'parents': [folder_id]
}
media = MediaFileUpload(excel_file_path, mimetype='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')
file = drive_service.files().create(body=file_metadata, media_body=media, fields='id').execute()

print('File ID: %s' % file.get('id'))